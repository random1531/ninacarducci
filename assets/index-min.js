document.addEventListener('DOMContentLoaded',function(){mauGallery(document.querySelectorAll('.gallery'),{columns:{xs:1,sm:2,md:3,lg:3,xl:3},lightBox:!0,lightboxId:'myAwesomeLightbox',showTags:!0,tagsPosition:'top'})});function mauGallery(galleries,options){const defaultOptions={columns:3,lightBox:!0,lightboxId:null,showTags:!0,tagsPosition:"bottom",navigation:!0};options={...defaultOptions,...options};const tagsCollection=new Set();galleries.forEach((gallery)=>{createRowWrapper(gallery);if(options.lightBox){createLightBox(gallery,options.lightboxId,options.navigation)}
const galleryItems=gallery.querySelectorAll(".gallery-item");galleryItems.forEach((item)=>{responsiveImageItem(item);moveItemInRowWrapper(item,gallery);wrapItemInColumn(item,options.columns);const theTag=item.getAttribute("data-gallery-tag");if(options.showTags&&theTag&&!tagsCollection.has(theTag)){tagsCollection.add(theTag)}});if(options.showTags){showItemTags(gallery,options.tagsPosition,Array.from(tagsCollection))}
gallery.style.display='block';setListeners(gallery,options)})}
function setListeners(gallery,options){const galleryItems=gallery.querySelectorAll(".gallery-item");galleryItems.forEach((item)=>{item.addEventListener("click",function(){if(options.lightBox&&this.tagName==="IMG"){openLightBox(this,options.lightboxId)}})});const galleryNavLinks=gallery.querySelectorAll(".nav-link");galleryNavLinks.forEach((navLink)=>{navLink.addEventListener("click",filterByTag)});if(options.navigation){const prevBtn=gallery.querySelector(".mg-prev");const nextBtn=gallery.querySelector(".mg-next");if(prevBtn)prevBtn.addEventListener("click",()=>prevImage(options.lightboxId));if(nextBtn)nextBtn.addEventListener("click",()=>nextImage(options.lightboxId));}}
function createRowWrapper(gallery){if(!gallery.querySelector(".gallery-items-row")){const rowWrapper=document.createElement("div");rowWrapper.className="gallery-items-row row";gallery.appendChild(rowWrapper)}}
function wrapItemInColumn(element,columns){let columnClasses="item-column mb-4";if(typeof columns==="number"){columnClasses+=` col-${Math.ceil(12 / columns)}`}else if(typeof columns==="object"){if(columns.xs)columnClasses+=` col-${Math.ceil(12 / columns.xs)}`;if(columns.sm)columnClasses+=` col-sm-${Math.ceil(12 / columns.sm)}`;if(columns.md)columnClasses+=` col-md-${Math.ceil(12 / columns.md)}`;if(columns.lg)columnClasses+=` col-lg-${Math.ceil(12 / columns.lg)}`;if(columns.xl)columnClasses+=` col-xl-${Math.ceil(12 / columns.xl)}`}else{console.error(`Columns should be defined as numbers or objects. ${typeof columns} is not supported.`)}
const wrapper=document.createElement("div");wrapper.className=columnClasses;element.parentNode.insertBefore(wrapper,element);wrapper.appendChild(element)}
function moveItemInRowWrapper(element,gallery){const rowWrapper=gallery.querySelector(".gallery-items-row");rowWrapper.appendChild(element)}
function responsiveImageItem(element){if(element.tagName==="IMG"){element.classList.add("img-fluid")}}
function openLightBox(element,lightboxId){const lightbox=document.getElementById(lightboxId);if(lightbox){const lightboxImage=lightbox.querySelector(".lightboxImage");lightboxImage.src=element.src;lightbox.classList.add("show")}}
function prevImage(lightboxId){changeImage(lightboxId,-1)}
function nextImage(lightboxId){changeImage(lightboxId,1)}
function changeImage(lightboxId,direction){const lightbox=document.getElementById(lightboxId);if(!lightbox)return;const lightboxImage=lightbox.querySelector(".lightboxImage");const currentSrc=lightboxImage.src;const images=Array.from(document.querySelectorAll("img.gallery-item"));const currentIndex=images.findIndex((img)=>img.src===currentSrc);const nextIndex=(currentIndex+direction+images.length)%images.length;lightboxImage.src=images[nextIndex].src}
function createLightBox(gallery,lightboxId,navigation){const lightbox=document.createElement("div");lightbox.className="modal fade";lightbox.id=lightboxId||"galleryLightbox";lightbox.tabIndex=-1;lightbox.role="dialog";lightbox.ariaHidden="true";lightbox.innerHTML=`
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-body">
          ${navigation ? '<div class="mg-prev" style="cursor:pointer;position:absolute;top:50%;left:-15px;background:white;"><</div>' : ''}
          <img class="lightboxImage img-fluid" alt="Contenu de l'image affichÃ©e dans la modale au clique"/>
          ${navigation ? '<div class="mg-next" style="cursor:pointer;position:absolute;top:50%;right:-15px;background:white;">></div>' : ''}
        </div>
      </div>
    </div>`;gallery.appendChild(lightbox)}
function showItemTags(gallery,position,tags){let tagsHTML=`<li class="nav-item"><span class="nav-link active active-tag" data-images-toggle="all">Tous</span></li>`;tags.forEach(tag=>{tagsHTML+=`<li class="nav-item"><span class="nav-link" data-images-toggle="${tag}">${tag}</span></li>`});const tagsBar=document.createElement("ul");tagsBar.className="my-4 tags-bar nav nav-pills";tagsBar.innerHTML=tagsHTML;if(position==="bottom"){gallery.appendChild(tagsBar)}else if(position==="top"){gallery.insertBefore(tagsBar,gallery.firstChild)}else{console.error(`Unknown tags position: ${position}`)}}
function filterByTag(event){if(this.classList.contains("active-tag")){return}
document.querySelector(".active-tag").classList.remove("active","active-tag");this.classList.add("active","active-tag");const tag=this.getAttribute("data-images-toggle");const items=document.querySelectorAll(".gallery-item");items.forEach((item)=>{const itemColumn=item.closest(".item-column");if(tag==="all"||item.getAttribute("data-gallery-tag")===tag){itemColumn.style.display="block"}else{itemColumn.style.display="none"}})}